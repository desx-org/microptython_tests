diff -ruN bin/ref_micropython_micropython_v1.23.0/ports/minimal/Makefile bin/micropython_micropython_v1.23.0/ports/minimal/Makefile
--- bin/ref_micropython_micropython_v1.23.0/ports/minimal/Makefile	2024-07-06 11:31:47.000000000 -0400
+++ bin/micropython_micropython_v1.23.0/ports/minimal/Makefile	2024-07-06 14:47:56.255489743 -0400
@@ -1,9 +1,9 @@
-include ../../py/mkenv.mk
+include $(TOP)/py/mkenv.mk
 
 CROSS = 0
 
 # qstr definitions (must come before including py.mk)
-QSTR_DEFS = qstrdefsport.h
+QSTR_DEFS = $(PORT_DIR)/qstrdefsport.h
 
 # MicroPython feature configurations
 MICROPY_ROM_TEXT_COMPRESSION ?= 1
@@ -53,8 +53,8 @@
 LIBS =
 
 SRC_C = \
-	main.c \
-	uart_core.c \
+	$(PORT_DIR)/main.c \
+	$(PORT_DIR)/uart_core.c \
 	shared/libc/printf.c \
 	shared/readline/readline.c \
 	shared/runtime/pyexec.c \
diff -ruN bin/ref_micropython_micropython_v1.23.0/py/mkenv.mk bin/micropython_micropython_v1.23.0/py/mkenv.mk
--- bin/ref_micropython_micropython_v1.23.0/py/mkenv.mk	2024-07-06 11:31:47.000000000 -0400
+++ bin/micropython_micropython_v1.23.0/py/mkenv.mk	2024-07-06 14:40:02.734491619 -0400
@@ -10,7 +10,7 @@
 # to get to the top of the tree.
 
 THIS_MAKEFILE := $(lastword $(MAKEFILE_LIST))
-TOP := $(patsubst %/py/mkenv.mk,%,$(THIS_MAKEFILE))
+#TOP := $(patsubst %/py/mkenv.mk,%,$(THIS_MAKEFILE))
 
 # Turn on increased build verbosity by defining BUILD_VERBOSE in your main
 # Makefile or in your environment. You can also use V=1 on the make command
Binary files bin/ref_micropython_micropython_v1.23.0/py/__pycache__/makeqstrdata.cpython-311.pyc and bin/micropython_micropython_v1.23.0/py/__pycache__/makeqstrdata.cpython-311.pyc differ
diff -ruN bin/ref_micropython_micropython_v1.23.0/py/py.mk bin/micropython_micropython_v1.23.0/py/py.mk
--- bin/ref_micropython_micropython_v1.23.0/py/py.mk	2024-07-06 11:31:47.000000000 -0400
+++ bin/micropython_micropython_v1.23.0/py/py.mk	2024-07-06 14:46:12.949490189 -0400
@@ -15,7 +15,7 @@
 
 # Any files listed by these variables will cause a full regeneration of qstrs
 # DEPENDENCIES: included in qstr processing; REQUIREMENTS: not included
-QSTR_GLOBAL_DEPENDENCIES += $(PY_SRC)/mpconfig.h mpconfigport.h
+QSTR_GLOBAL_DEPENDENCIES += $(PY_SRC)/mpconfig.h $(PORT_DIR)/mpconfigport.h
 QSTR_GLOBAL_REQUIREMENTS += $(HEADER_BUILD)/mpversion.h
 
 # some code is performance bottleneck and compiled with other optimization options
@@ -227,7 +227,7 @@
 # Note: we need to protect the qstr names from the preprocessor, so we wrap
 # the lines in "" and then unwrap after the preprocessor is finished.
 # See more information about this process in docs/develop/qstr.rst.
-$(HEADER_BUILD)/qstrdefs.generated.h: $(PY_QSTR_DEFS) $(QSTR_DEFS) $(QSTR_DEFS_COLLECTED) $(PY_SRC)/makeqstrdata.py mpconfigport.h $(MPCONFIGPORT_MK) $(PY_SRC)/mpconfig.h | $(HEADER_BUILD)
+$(HEADER_BUILD)/qstrdefs.generated.h: $(PY_QSTR_DEFS) $(QSTR_DEFS) $(QSTR_DEFS_COLLECTED) $(PY_SRC)/makeqstrdata.py $(PORT_DIR)/mpconfigport.h $(MPCONFIGPORT_MK) $(PY_SRC)/mpconfig.h | $(HEADER_BUILD)
 	$(ECHO) "GEN $@"
 	$(Q)$(CAT) $(PY_QSTR_DEFS) $(QSTR_DEFS) $(QSTR_DEFS_COLLECTED) | $(SED) 's/^Q(.*)/"&"/' | $(CPP) $(CFLAGS) - | $(SED) 's/^\"\(Q(.*)\)\"/\1/' > $(HEADER_BUILD)/qstrdefs.preprocessed.h
 	$(Q)$(PYTHON) $(PY_SRC)/makeqstrdata.py $(HEADER_BUILD)/qstrdefs.preprocessed.h > $@
