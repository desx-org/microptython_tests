diff -ruN bin/ref_micropython_micropython_v1.23.0/mpy-cross/Makefile bin/micropython_micropython_v1.23.0/mpy-cross/Makefile
--- bin/ref_micropython_micropython_v1.23.0/mpy-cross/Makefile	2024-07-13 14:18:14.000000000 -0400
+++ bin/micropython_micropython_v1.23.0/mpy-cross/Makefile	2024-07-13 14:19:52.596956875 -0400
@@ -1,4 +1,4 @@
-include ../py/mkenv.mk
+include $(TOP)/py/mkenv.mk
 
 # define main target
 PROG = mpy-cross
@@ -58,5 +58,4 @@
 
 OBJ = $(PY_CORE_O)
 OBJ += $(addprefix $(BUILD)/, $(SRC_C:.c=.o))
-
 include $(TOP)/py/mkrules.mk
diff -ruN bin/ref_micropython_micropython_v1.23.0/ports/minimal/Makefile bin/micropython_micropython_v1.23.0/ports/minimal/Makefile
--- bin/ref_micropython_micropython_v1.23.0/ports/minimal/Makefile	2024-07-13 14:18:14.000000000 -0400
+++ bin/micropython_micropython_v1.23.0/ports/minimal/Makefile	2024-07-13 14:18:45.619957085 -0400
@@ -1,9 +1,9 @@
-include ../../py/mkenv.mk
+include $(TOP)/py/mkenv.mk
 
 CROSS = 0
 
 # qstr definitions (must come before including py.mk)
-QSTR_DEFS = qstrdefsport.h
+QSTR_DEFS = $(PORT_DIR)/qstrdefsport.h
 
 # MicroPython feature configurations
 MICROPY_ROM_TEXT_COMPRESSION ?= 1
@@ -53,8 +53,8 @@
 LIBS =
 
 SRC_C = \
-	main.c \
-	uart_core.c \
+	$(PORT_DIR)/main.c \
+	$(PORT_DIR)/uart_core.c \
 	shared/libc/printf.c \
 	shared/readline/readline.c \
 	shared/runtime/pyexec.c \
diff -ruN bin/ref_micropython_micropython_v1.23.0/ports/unix/Makefile bin/micropython_micropython_v1.23.0/ports/unix/Makefile
--- bin/ref_micropython_micropython_v1.23.0/ports/unix/Makefile	2024-07-13 14:18:14.000000000 -0400
+++ bin/micropython_micropython_v1.23.0/ports/unix/Makefile	2024-07-13 14:19:39.784956906 -0400
@@ -1,4 +1,8 @@
 # Select the variant to build for:
+UP_DIR=$(patsubst %/,%,$(dir $1))
+PORT_DIR?=$(call UP_DIR ,$(firstword $(MAKEFILE_LIST)))
+TOP:=$(call UP_DIR ,$(call UP_DIR ,$(PORT_DIR)))
+
 ifdef VARIANT_DIR
 # Custom variant path - remove trailing slash and get the final component of
 # the path as the variant name.
@@ -6,9 +10,8 @@
 else
 # If not given on the command line, then default to standard.
 VARIANT ?= standard
-VARIANT_DIR ?= variants/$(VARIANT)
+VARIANT_DIR ?= $(PORT_DIR)/variants/$(VARIANT)
 endif
-
 ifeq ($(wildcard $(VARIANT_DIR)/.),)
 $(error Invalid VARIANT specified: $(VARIANT_DIR))
 endif
@@ -16,18 +19,18 @@
 # If the build directory is not given, make it reflect the variant name.
 BUILD ?= build-$(VARIANT)
 
-include ../../py/mkenv.mk
--include mpconfigport.mk
+include $(TOP)/py/mkenv.mk
+-include $(PORT_DIR)/mpconfigport.mk
 include $(VARIANT_DIR)/mpconfigvariant.mk
 
 # Use the default frozen manifest, variants may override this.
-FROZEN_MANIFEST ?= variants/manifest.py
+FROZEN_MANIFEST ?= $(PORT_DIR)/variants/manifest.py
 
 # This should be configured by the mpconfigvariant.mk
 PROG ?= micropython
 
 # qstr definitions (must come before including py.mk)
-QSTR_DEFS += qstrdefsport.h
+QSTR_DEFS += $(PORT_DIR)/qstrdefsport.h
 QSTR_GLOBAL_DEPENDENCIES += $(VARIANT_DIR)/mpconfigvariant.h
 
 # OS name, for simple autoconfig
diff -ruN bin/ref_micropython_micropython_v1.23.0/py/mkenv.mk bin/micropython_micropython_v1.23.0/py/mkenv.mk
--- bin/ref_micropython_micropython_v1.23.0/py/mkenv.mk	2024-07-13 14:18:14.000000000 -0400
+++ bin/micropython_micropython_v1.23.0/py/mkenv.mk	2024-07-13 14:18:45.619957085 -0400
@@ -10,7 +10,7 @@
 # to get to the top of the tree.
 
 THIS_MAKEFILE := $(lastword $(MAKEFILE_LIST))
-TOP := $(patsubst %/py/mkenv.mk,%,$(THIS_MAKEFILE))
+#TOP := $(patsubst %/py/mkenv.mk,%,$(THIS_MAKEFILE))
 
 # Turn on increased build verbosity by defining BUILD_VERBOSE in your main
 # Makefile or in your environment. You can also use V=1 on the make command
diff -ruN bin/ref_micropython_micropython_v1.23.0/py/py.mk bin/micropython_micropython_v1.23.0/py/py.mk
--- bin/ref_micropython_micropython_v1.23.0/py/py.mk	2024-07-13 14:18:14.000000000 -0400
+++ bin/micropython_micropython_v1.23.0/py/py.mk	2024-07-13 14:18:45.619957085 -0400
@@ -15,7 +15,7 @@
 
 # Any files listed by these variables will cause a full regeneration of qstrs
 # DEPENDENCIES: included in qstr processing; REQUIREMENTS: not included
-QSTR_GLOBAL_DEPENDENCIES += $(PY_SRC)/mpconfig.h mpconfigport.h
+QSTR_GLOBAL_DEPENDENCIES += $(PY_SRC)/mpconfig.h $(PORT_DIR)/mpconfigport.h
 QSTR_GLOBAL_REQUIREMENTS += $(HEADER_BUILD)/mpversion.h
 
 # some code is performance bottleneck and compiled with other optimization options
@@ -227,7 +227,7 @@
 # Note: we need to protect the qstr names from the preprocessor, so we wrap
 # the lines in "" and then unwrap after the preprocessor is finished.
 # See more information about this process in docs/develop/qstr.rst.
-$(HEADER_BUILD)/qstrdefs.generated.h: $(PY_QSTR_DEFS) $(QSTR_DEFS) $(QSTR_DEFS_COLLECTED) $(PY_SRC)/makeqstrdata.py mpconfigport.h $(MPCONFIGPORT_MK) $(PY_SRC)/mpconfig.h | $(HEADER_BUILD)
+$(HEADER_BUILD)/qstrdefs.generated.h: $(PY_QSTR_DEFS) $(QSTR_DEFS) $(QSTR_DEFS_COLLECTED) $(PY_SRC)/makeqstrdata.py $(PORT_DIR)/mpconfigport.h $(MPCONFIGPORT_MK) $(PY_SRC)/mpconfig.h | $(HEADER_BUILD)
 	$(ECHO) "GEN $@"
 	$(Q)$(CAT) $(PY_QSTR_DEFS) $(QSTR_DEFS) $(QSTR_DEFS_COLLECTED) | $(SED) 's/^Q(.*)/"&"/' | $(CPP) $(CFLAGS) - | $(SED) 's/^\"\(Q(.*)\)\"/\1/' > $(HEADER_BUILD)/qstrdefs.preprocessed.h
 	$(Q)$(PYTHON) $(PY_SRC)/makeqstrdata.py $(HEADER_BUILD)/qstrdefs.preprocessed.h > $@
