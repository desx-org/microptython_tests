Binary files bin/ref_micropython_micropython_v1.23.0/.git/index and bin/micropython_micropython_v1.23.0/.git/index differ
Binary files bin/ref_micropython_micropython_v1.23.0/.git/modules/lib/berkeley-db-1.xx/index and bin/micropython_micropython_v1.23.0/.git/modules/lib/berkeley-db-1.xx/index differ
Binary files bin/ref_micropython_micropython_v1.23.0/.git/modules/lib/mbedtls/index and bin/micropython_micropython_v1.23.0/.git/modules/lib/mbedtls/index differ
Binary files bin/ref_micropython_micropython_v1.23.0/.git/modules/lib/micropython-lib/index and bin/micropython_micropython_v1.23.0/.git/modules/lib/micropython-lib/index differ
diff -ruN bin/ref_micropython_micropython_v1.23.0/mpy-cross/Makefile bin/micropython_micropython_v1.23.0/mpy-cross/Makefile
--- bin/ref_micropython_micropython_v1.23.0/mpy-cross/Makefile	2024-07-13 14:24:36.000000000 -0400
+++ bin/micropython_micropython_v1.23.0/mpy-cross/Makefile	2024-07-14 11:45:36.815422679 -0400
@@ -1,10 +1,11 @@
-include ../py/mkenv.mk
+MAKEFLAGS:=-j 6
+include $(TOP)/py/mkenv.mk
 
 # define main target
 PROG = mpy-cross
 
 # qstr definitions (must come before including py.mk)
-QSTR_DEFS = qstrdefsport.h
+QSTR_DEFS = $(PORT_DIR)/qstrdefsport.h
 
 # OS name, for simple autoconfig
 UNAME_S := $(shell uname -s)
@@ -12,7 +13,7 @@
 # include py core make definitions
 include $(TOP)/py/py.mk
 
-INC += -I.
+INC += -I$(PORT_DIR)
 INC += -I$(BUILD)
 INC += -I$(TOP)
 
@@ -45,10 +46,11 @@
 LDFLAGS += $(LDFLAGS_MOD) $(LDFLAGS_ARCH) -lm $(LDFLAGS_EXTRA)
 
 # source files
-SRC_C = \
+SRC_CA= \
 	main.c \
 	gccollect.c \
-	shared/runtime/gchelper_generic.c \
+	shared/runtime/gchelper_generic.c 
+
 
 # Add fmode when compiling with mingw gcc
 COMPILER_TARGET := $(shell $(CC) -dumpmachine)
@@ -56,7 +58,9 @@
 	SRC_C += ports/windows/fmode.c
 endif
 
+SRC_C=$(addprefix $(PORT_DIR)/,$(SRC_CA))
+
 OBJ = $(PY_CORE_O)
-OBJ += $(addprefix $(BUILD)/, $(SRC_C:.c=.o))
+OBJ += $(addprefix $(BUILD)/, $(SRC_CA:.c=.o))
 
 include $(TOP)/py/mkrules.mk
diff -ruN bin/ref_micropython_micropython_v1.23.0/ports/minimal/Makefile bin/micropython_micropython_v1.23.0/ports/minimal/Makefile
--- bin/ref_micropython_micropython_v1.23.0/ports/minimal/Makefile	2024-07-13 14:24:36.000000000 -0400
+++ bin/micropython_micropython_v1.23.0/ports/minimal/Makefile	2024-07-13 14:25:41.115955580 -0400
@@ -1,9 +1,9 @@
-include ../../py/mkenv.mk
+include $(TOP)/py/mkenv.mk
 
 CROSS = 0
 
 # qstr definitions (must come before including py.mk)
-QSTR_DEFS = qstrdefsport.h
+QSTR_DEFS = $(PORT_DIR)/qstrdefsport.h
 
 # MicroPython feature configurations
 MICROPY_ROM_TEXT_COMPRESSION ?= 1
@@ -53,8 +53,8 @@
 LIBS =
 
 SRC_C = \
-	main.c \
-	uart_core.c \
+	$(PORT_DIR)/main.c \
+	$(PORT_DIR)/uart_core.c \
 	shared/libc/printf.c \
 	shared/readline/readline.c \
 	shared/runtime/pyexec.c \
diff -ruN bin/ref_micropython_micropython_v1.23.0/ports/unix/Makefile bin/micropython_micropython_v1.23.0/ports/unix/Makefile
--- bin/ref_micropython_micropython_v1.23.0/ports/unix/Makefile	2024-07-13 14:24:36.000000000 -0400
+++ bin/micropython_micropython_v1.23.0/ports/unix/Makefile	2024-07-14 12:44:03.195845351 -0400
@@ -1,4 +1,8 @@
 # Select the variant to build for:
+UP_DIR=$(patsubst %/,%,$(dir $1))
+PORT_DIR?=$(call UP_DIR ,$(firstword $(MAKEFILE_LIST)))
+TOP:=$(call UP_DIR ,$(call UP_DIR ,$(PORT_DIR)))
+
 ifdef VARIANT_DIR
 # Custom variant path - remove trailing slash and get the final component of
 # the path as the variant name.
@@ -6,9 +10,8 @@
 else
 # If not given on the command line, then default to standard.
 VARIANT ?= standard
-VARIANT_DIR ?= variants/$(VARIANT)
+VARIANT_DIR ?= $(PORT_DIR)/variants/$(VARIANT)
 endif
-
 ifeq ($(wildcard $(VARIANT_DIR)/.),)
 $(error Invalid VARIANT specified: $(VARIANT_DIR))
 endif
@@ -16,18 +19,18 @@
 # If the build directory is not given, make it reflect the variant name.
 BUILD ?= build-$(VARIANT)
 
-include ../../py/mkenv.mk
--include mpconfigport.mk
+include $(TOP)/py/mkenv.mk
+-include $(PORT_DIR)/mpconfigport.mk
 include $(VARIANT_DIR)/mpconfigvariant.mk
 
 # Use the default frozen manifest, variants may override this.
-FROZEN_MANIFEST ?= variants/manifest.py
+FROZEN_MANIFEST ?= $(PORT_DIR)/variants/manifest.py
 
 # This should be configured by the mpconfigvariant.mk
 PROG ?= micropython
 
 # qstr definitions (must come before including py.mk)
-QSTR_DEFS += qstrdefsport.h
+QSTR_DEFS += $(PORT_DIR)/qstrdefsport.h
 QSTR_GLOBAL_DEPENDENCIES += $(VARIANT_DIR)/mpconfigvariant.h
 
 # OS name, for simple autoconfig
@@ -39,7 +42,7 @@
 
 GIT_SUBMODULES += lib/berkeley-db-1.xx
 
-INC +=  -I.
+INC +=  -I$(PORT_DIR)
 INC +=  -I$(TOP)
 INC += -I$(BUILD)
 
@@ -194,7 +197,7 @@
 endif
 
 # source files
-SRC_C += \
+SRC_C += $(addprefix $(PORT_DIR)/, \
 	main.c \
 	gccollect.c \
 	unix_mphal.c \
@@ -210,10 +213,11 @@
 	modtermios.c \
 	modsocket.c \
 	modffi.c \
-	modjni.c \
-	$(wildcard $(VARIANT_DIR)/*.c)
+	modjni.c )
+
+SRC_C += $(wildcard $(VARIANT_DIR)/*.c)
 
-SHARED_SRC_C += $(addprefix shared/,\
+SHARED_SRC_C += $(addprefix $(PORT_DIR)/shared/,\
 	runtime/gchelper_generic.c \
 	timeutils/timeutils.c \
 	$(SHARED_SRC_C_EXTRA) \
diff -ruN bin/ref_micropython_micropython_v1.23.0/py/mkenv.mk bin/micropython_micropython_v1.23.0/py/mkenv.mk
--- bin/ref_micropython_micropython_v1.23.0/py/mkenv.mk	2024-07-13 14:24:36.000000000 -0400
+++ bin/micropython_micropython_v1.23.0/py/mkenv.mk	2024-07-14 10:23:22.840430691 -0400
@@ -10,7 +10,7 @@
 # to get to the top of the tree.
 
 THIS_MAKEFILE := $(lastword $(MAKEFILE_LIST))
-TOP := $(patsubst %/py/mkenv.mk,%,$(THIS_MAKEFILE))
+#TOP := $(patsubst %/py/mkenv.mk,%,$(THIS_MAKEFILE))
 
 # Turn on increased build verbosity by defining BUILD_VERBOSE in your main
 # Makefile or in your environment. You can also use V=1 on the make command
@@ -32,7 +32,7 @@
 # default settings; can be overridden in main Makefile
 
 PY_SRC ?= $(TOP)/py
-BUILD ?= build
+BUILD ?= $(PORT_DIR)/build
 
 RM = rm
 ECHO = @echo
diff -ruN bin/ref_micropython_micropython_v1.23.0/py/mkrules.mk bin/micropython_micropython_v1.23.0/py/mkrules.mk
--- bin/ref_micropython_micropython_v1.23.0/py/mkrules.mk	2024-07-13 14:24:36.000000000 -0400
+++ bin/micropython_micropython_v1.23.0/py/mkrules.mk	2024-07-14 12:45:34.405845005 -0400
@@ -89,6 +89,12 @@
 $(BUILD)/%.o: %.c
 	$(call compile_c)
 
+$(BUILD)/%.o: $(PORT_DIR)/%.c
+	$(call compile_c)
+
+$(BUILD)/%.o: $(PORT_DIR)/shared/%.c
+	$(call compile_c)
+
 vpath %.cpp . $(TOP) $(USER_C_MODULES)
 $(BUILD)/%.o: %.cpp
 	$(call compile_cxx)
@@ -173,11 +179,11 @@
 $(HEADER_BUILD):
 	$(MKDIR) -p $@
 
-ifneq ($(MICROPY_MPYCROSS_DEPENDENCY),)
-# to automatically build mpy-cross, if needed
-$(MICROPY_MPYCROSS_DEPENDENCY):
-	$(MAKE) -C "$(abspath $(dir $@)..)"
-endif
+#ifneq ($(MICROPY_MPYCROSS_DEPENDENCY),)
+## to automatically build mpy-cross, if needed
+#$(MICROPY_MPYCROSS_DEPENDENCY):
+#	$(MAKE) -C "$(abspath $(dir $@)..)"
+#endif
 
 ifneq ($(FROZEN_DIR),)
 $(error Support for FROZEN_DIR was removed. Please use manifest.py instead, see https://docs.micropython.org/en/latest/reference/manifest.html)
@@ -203,7 +209,7 @@
 # available in path substitutions. Additional variables can be set per-board
 # in mpconfigboard.mk or on the make command line.
 MICROPY_MANIFEST_MPY_LIB_DIR = $(MPY_LIB_DIR)
-MICROPY_MANIFEST_PORT_DIR = $(shell pwd)
+MICROPY_MANIFEST_PORT_DIR = $(PORT_DIR)
 MICROPY_MANIFEST_BOARD_DIR = $(BOARD_DIR)
 MICROPY_MANIFEST_MPY_DIR = $(TOP)
 
@@ -251,8 +257,8 @@
 submodules:
 	$(ECHO) "Updating submodules: $(GIT_SUBMODULES)"
 ifneq ($(GIT_SUBMODULES),)
-	$(Q)git submodule sync $(addprefix $(TOP)/,$(GIT_SUBMODULES))
-	$(Q)git submodule update --init $(addprefix $(TOP)/,$(GIT_SUBMODULES))
+	$(Q)git -C $(TOP) submodule sync $(GIT_SUBMODULES)
+	$(Q)git -C $(TOP) submodule update --init $(GIT_SUBMODULES)
 endif
 .PHONY: submodules
 
diff -ruN bin/ref_micropython_micropython_v1.23.0/py/py.mk bin/micropython_micropython_v1.23.0/py/py.mk
--- bin/ref_micropython_micropython_v1.23.0/py/py.mk	2024-07-13 14:24:36.000000000 -0400
+++ bin/micropython_micropython_v1.23.0/py/py.mk	2024-07-13 14:25:41.116955580 -0400
@@ -15,7 +15,7 @@
 
 # Any files listed by these variables will cause a full regeneration of qstrs
 # DEPENDENCIES: included in qstr processing; REQUIREMENTS: not included
-QSTR_GLOBAL_DEPENDENCIES += $(PY_SRC)/mpconfig.h mpconfigport.h
+QSTR_GLOBAL_DEPENDENCIES += $(PY_SRC)/mpconfig.h $(PORT_DIR)/mpconfigport.h
 QSTR_GLOBAL_REQUIREMENTS += $(HEADER_BUILD)/mpversion.h
 
 # some code is performance bottleneck and compiled with other optimization options
@@ -227,7 +227,7 @@
 # Note: we need to protect the qstr names from the preprocessor, so we wrap
 # the lines in "" and then unwrap after the preprocessor is finished.
 # See more information about this process in docs/develop/qstr.rst.
-$(HEADER_BUILD)/qstrdefs.generated.h: $(PY_QSTR_DEFS) $(QSTR_DEFS) $(QSTR_DEFS_COLLECTED) $(PY_SRC)/makeqstrdata.py mpconfigport.h $(MPCONFIGPORT_MK) $(PY_SRC)/mpconfig.h | $(HEADER_BUILD)
+$(HEADER_BUILD)/qstrdefs.generated.h: $(PY_QSTR_DEFS) $(QSTR_DEFS) $(QSTR_DEFS_COLLECTED) $(PY_SRC)/makeqstrdata.py $(PORT_DIR)/mpconfigport.h $(MPCONFIGPORT_MK) $(PY_SRC)/mpconfig.h | $(HEADER_BUILD)
 	$(ECHO) "GEN $@"
 	$(Q)$(CAT) $(PY_QSTR_DEFS) $(QSTR_DEFS) $(QSTR_DEFS_COLLECTED) | $(SED) 's/^Q(.*)/"&"/' | $(CPP) $(CFLAGS) - | $(SED) 's/^\"\(Q(.*)\)\"/\1/' > $(HEADER_BUILD)/qstrdefs.preprocessed.h
 	$(Q)$(PYTHON) $(PY_SRC)/makeqstrdata.py $(HEADER_BUILD)/qstrdefs.preprocessed.h > $@
